<main class="container-fluid py-0">
  <div class="row g-0">
    <!-- ======= VIDEO PLAYER B√äN TR√ÅI ======= -->
    <div class="col-12 col-lg-8">
      <div
        class="player-wrapper position-relative rounded overflow-hidden bg-light shadow-sm"
        style="width: 100%; aspect-ratio: 16/9; min-height: 400px;"
      >
        <!-- üé¨ Video.js Player -->
        <div id="video-container" class="w-100 h-100" style="display: none;">
          <video
            id="learning-video"
            class="video-js vjs-big-play-centered w-100 h-100"
            controls
            preload="auto"
            poster="/static/images/video-placeholder.jpg"
            data-setup="{}"
            style="object-fit: cover;"
          >
            <source id="video-source" src="" type="video/mp4" />
            Your browser does not support the video tag.
          </video>
        </div>

        <!-- üñºÔ∏è Placeholder khi ch∆∞a ch·ªçn b√†i -->
        <div
          id="placeholder"
          class="d-flex flex-column align-items-center justify-content-center position-absolute top-0 start-0 w-100 h-100"
          style="background-color: #f8f9fa; opacity: 1; transition: opacity 0.4s ease; z-index: 2;"
        >
          <img
            src="https://cdn-icons-png.flaticon.com/512/2920/2920244.png"
            alt="No video selected"
            width="120"
          />
          <p class="text-muted mt-3 fs-6 text-center">
            Select a lesson to start watching the video
          </p>
        </div>
      </div>
    </div>

    <!-- ======= DANH S√ÅCH B√ÄI H·ªåC ======= -->
    <div class="col-12 col-lg-4 px-4 py-3">
      <div class="learning-sidebar card shadow-sm border-0 sticky-top" style="top: 20px;">
        <div class="card-body">
          <h5 class="fw-bold mb-3 text-primary">
            <i class="bi bi-collection-play"></i>
            Lecture List
          </h5>

          {{#each sections}}
          <div class="mb-3">
            <h6 class="fw-semibold text-secondary">{{title}}</h6>
            <ul class="list-group list-group-flush">
              {{#each lessons}}
              <li class="list-group-item p-2">
                <button
                  id="lesson-{{id}}"
                  class="btn btn-link text-decoration-none w-100 text-start lesson-item"
                  onclick="loadVideo('{{video_url}}','{{id}}')"
                >
                  ‚ñ∂ {{title}}
                </button>
              </li>
              {{/each}}
            </ul>
          </div>
          {{/each}}
        </div>
      </div>
    </div>
  </div>
</main>

<!-- ‚úÖ Video.js CDN -->
<link href="https://vjs.zencdn.net/8.10.0/video-js.css" rel="stylesheet" />
<script src="https://vjs.zencdn.net/8.10.0/video.min.js"></script>

<script>
  let player;
  let lastSent = 0;

  document.addEventListener("DOMContentLoaded", () => {
    player = videojs("learning-video", {
      controls: true,
      autoplay: false,
      preload: "auto",
    });

    const videoContainer = document.getElementById("video-container");
    const placeholder = document.getElementById("placeholder");

    videoContainer.style.display = "none";
    placeholder.style.opacity = "1";
    placeholder.style.pointerEvents = "auto";

    // ‚è± Theo d√µi ti·∫øn ƒë·ªô h·ªçc
    player.on("timeupdate", () => {
      const lessonId = window.currentLessonId;
      if (!lessonId || !player.duration()) return;

      const current = Math.floor(player.currentTime());
      const duration = Math.floor(player.duration());

      if (current - lastSent >= 10) {
        lastSent = current;
        const isDone = current / duration >= 0.5;
        sendProgress(lessonId, current, isDone);
      }
    });

    // Khi xem xong b√†i
    player.on("ended", () => {
      const lessonId = window.currentLessonId;
      if (!lessonId) return;
      const duration = Math.floor(player.duration());
      sendProgress(lessonId, duration, true);
      console.log(`‚úÖ Ho√†n th√†nh b√†i h·ªçc: ${lessonId}`);

      // Hi·ªán l·∫°i placeholder sau khi h·∫øt video
      const placeholder = document.getElementById("placeholder");
      placeholder.style.opacity = "1";
      placeholder.style.pointerEvents = "auto";
      placeholder.style.zIndex = "2";
    });
  });

  // ‚úÖ Khi click v√†o b√†i h·ªçc
  function loadVideo(filename, lessonId) {
  window.currentLessonId = lessonId;
  lastSent = 0;

  const placeholder = document.getElementById("placeholder");
  const videoContainer = document.getElementById("video-container");

  if (!filename) {
    alert("‚ùå Kh√¥ng t√¨m th·∫•y video!");
    return;
  }

  // ·∫®n placeholder, hi·ªán video
  placeholder.style.opacity = "0";
  placeholder.style.pointerEvents = "none";
  placeholder.style.zIndex = "0";
  videoContainer.style.display = "flex";

  // D·ª´ng video c≈© n·∫øu c√≥
  if (player && !player.paused()) player.pause();

  // ‚úÖ N·∫°p video m·ªõi ƒë√∫ng c√°ch
  const safeSrc = decodeURIComponent(filename);
  player.src({ type: "video/mp4", src: safeSrc });
  player.one("loadedmetadata", () => {
    player.play().catch((err) => {
      console.warn("‚ö†Ô∏è Kh√¥ng th·ªÉ t·ª± ƒë·ªông ph√°t video:", err);
    });
  });

  // Highlight b√†i ƒëang h·ªçc
  document.querySelectorAll(".lesson-item").forEach((btn) =>
    btn.classList.remove("active-lesson")
  );
  const activeBtn = document.getElementById(`lesson-${lessonId}`);
  if (activeBtn) activeBtn.classList.add("active-lesson");
}


  // ‚úÖ G·ª≠i ti·∫øn ƒë·ªô h·ªçc l√™n server
  async function sendProgress(lessonId, watchedSec, isDone) {
    try {
      const res = await fetch(`/student/progress/${lessonId}`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          watched_sec: watchedSec,
          is_done: isDone,
        }),
      });

      if (!res.ok) {
        console.error(`‚ö†Ô∏è L∆∞u ti·∫øn ƒë·ªô th·∫•t b·∫°i: ${lessonId}`, res.status);
      } else {
        console.log(
          `üì© ƒê√£ l∆∞u ti·∫øn ƒë·ªô b√†i ${lessonId}: ${watchedSec}s, done=${isDone}`
        );
      }
    } catch (err) {
      console.error("‚ùå L·ªói khi g·ª≠i ti·∫øn ƒë·ªô:", err);
    }
  }
</script>

<style>
  .lesson-item.active-lesson {
    background-color: #e7f1ff !important;
    border-radius: 6px;
    color: #0d6efd !important;
    font-weight: 600;
  }

  .player-wrapper video {
    border-radius: 10px;
    object-fit: cover;
  }
</style>
