<form id="frmCourse" method="post" action="{{#if course.id}}/instructor/courses/{{course.id}}{{else}}/instructor/courses{{/if}}">

  <div class="row g-3">
    <div class="col-md-8">
      <div class="mb-3">
        <label class="form-label">Title <span class="text-danger">*</span></label>
        <input name="title" class="form-control" value="{{course.title}}" required>
      </div>

      <div class="mb-3">
        <label class="form-label">Short Description</label>
        <textarea name="short_desc" class="form-control" rows="3">{{course.short_desc}}</textarea>
      </div>

      <div class="mb-3">
        <label class="form-label">Full Description</label>
        {{!-- TinyMCE gắn vào textarea này. Dùng triple-stash để render HTML sẵn có --}}
        <textarea id="long_desc_html" name="long_desc_html" rows="12">{{{course.long_desc_html}}}</textarea>
      </div>
    </div>

    <div class="col-md-4">
      <div class="mb-3">
        <label class="form-label">Category <span class="text-danger">*</span></label>
        <select name="cat_id" class="form-select" required>
          <option value="">-- Select category --</option>
          {{#each categories}}
            <option value="{{this.id}}" {{#if (eq this.id ../course.cat_id)}}selected{{/if}}>
              {{this.name}}
            </option>
          {{/each}}
        </select>
      </div>

      <div class="mb-3">
        <label class="form-label">Price</label>
        <input name="price" type="number" step="0.01" min="0" class="form-control" value="{{course.price}}">
        <div class="form-text">Để trống nếu miễn phí.</div>
      </div>

      <div class="mb-3">
        <label class="form-label">Promo Price</label>
        <input name="promo_price" type="number" step="0.01" min="0" class="form-control" value="{{course.promo_price}}">
        <div class="form-text">Không lớn hơn Price.</div>
      </div>

      <div class="mb-3">
        <label class="form-label">Cover Image</label>
        <div class="d-flex align-items-center gap-3">
          <img id="coverPreview" src="{{course.cover_url}}" alt="" class="rounded border" style="width:96px;height:96px;object-fit:cover;{{#unless course.cover_url}}display:none;{{/unless}}">
          <div>
            <input id="coverFile" type="file" accept="image/*" class="form-control form-control-sm" />
            <input type="hidden" name="cover_url" id="coverUrl" value="{{course.cover_url}}">
            <div class="form-text">Ảnh sẽ được upload lên server và tự gán vào Cover URL.</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <hr class="my-4">

  <div class="d-flex justify-content-between">
    <a href="/instructor/my-courses" class="btn btn-outline-secondary">Cancel</a>
    <button class="btn btn-primary" type="submit">
      {{#if course.id}}Update{{else}}Create{{/if}}
    </button>
  </div>
</form>

{{!-- TinyMCE CDN --}}
<script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>

<script>
  // --- TinyMCE ---
  tinymce.init({
    selector: '#long_desc_html',
    menubar: false,
    height: 420,
    plugins: 'lists link image media table codesample code autoresize',
    toolbar: [
      'undo redo | blocks | bold italic underline forecolor backcolor |' +
      ' alignleft aligncenter alignright alignjustify | bullist numlist outdent indent |' +
      ' link image media table codesample | removeformat code'
    ].join(' '),
    automatic_uploads: true,
    images_file_types: 'jpg,jpeg,png,gif,webp',
    images_upload_handler: async (blobInfo, progress) => {
      const form = new FormData();
      form.append('file', blobInfo.blob(), blobInfo.filename());
      const res = await fetch('/instructor/upload', { method: 'POST', body: form });
      if (!res.ok) throw new Error('Upload failed: ' + res.status);
      const data = await res.json();
      if (!data?.url) throw new Error('Invalid upload response');
      return data.url;
    },
    content_style: 'body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial;font-size:14px}'
  });

  // --- Cover upload via /instructor/upload ---
  const $file = document.getElementById('coverFile');
  const $url  = document.getElementById('coverUrl');
  const $img  = document.getElementById('coverPreview');

  $file?.addEventListener('change', async (e) => {
    const f = e.target.files?.[0];
    if (!f) return;
    const form = new FormData();
    form.append('file', f, f.name);
    try {
      const res = await fetch('/instructor/upload', { method: 'POST', body: form });
      if (!res.ok) throw new Error('Upload failed: ' + res.status);
      const data = await res.json();
      if (!data?.url) throw new Error('Invalid upload response');
      $url.value = data.url;
      $img.src = data.url;
      $img.style.display = '';
    } catch (err) {
      alert(err.message || 'Upload error');
    } finally {
      e.target.value = '';
    }
  });

  // --- Client-side validate before submit ---
  document.getElementById('frmCourse')?.addEventListener('submit', (e) => {
    const price = parseFloat(document.querySelector('[name="price"]')?.value || '');
    const promo = parseFloat(document.querySelector('[name="promo_price"]')?.value || '');
    const catId = document.querySelector('[name="cat_id"]')?.value;

    if (!catId) {
      e.preventDefault();
      return alert('Vui lòng chọn Category.');
    }
    if (!isNaN(promo) && !isNaN(price) && promo > price) {
      e.preventDefault();
      return alert('Promo Price không được lớn hơn Price.');
    }
    // đảm bảo TinyMCE sync nội dung về textarea
    if (window.tinymce) tinymce.triggerSave();
  });
</script>
