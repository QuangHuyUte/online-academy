{{#fill_Content 'css'}}
<link rel="stylesheet" href="/css/styleSignup.css">
{{/fill_Content}}

{{#fill_Content 'js'}}
<script>
    const frmRegister = document.querySelector('#frmRegister');
    const txtEmail = document.querySelector('#txtEmail');
    const txtPassword = document.querySelector('#txtPassword');
    const txtConfirm = document.querySelector('#txtConfirm');
    const otpContainer = document.querySelector('#otpContainer');
    const txtOTP = document.querySelector('#txtOTP');
    const btnSubmit = document.querySelector('#btnSubmit');
    const emailHelp = document.querySelector('#emailHelp'); 

    function showMessage(msg, isError = false) {
        // Render a prominent Bootstrap alert above the form for visibility
        const alertBox = document.querySelector('#alertBox');
        if (!alertBox) return; // fallback

        if (!msg) {
            alertBox.innerHTML = '';
            return;
        }

        const type = isError ? 'danger' : 'success';
        alertBox.innerHTML = `
            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                ${msg}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        `;

        // also keep the small helper text under email (for subtle hints)
        emailHelp.innerHTML = isError ? `<span class="text-danger">${msg}</span>` : `<span class="text-success">${msg}</span>`;
    }

    async function handleSignup(e) {
        e.preventDefault();

        const email = txtEmail.value;
        const password = txtPassword.value;
        const confirmPassword = txtConfirm.value;

        if (email.length === 0 || password.length === 0 || confirmPassword.length === 0) {
            showMessage('Please fill in all the fields.', true);
            return;
        }
        if (password !== confirmPassword) {
            showMessage('Password confirmation does not match.', true);
            return;
        }


        let res = await fetch(`/account/is-available?email=${email}`);
        let isAvailable = await res.json();

        if (isAvailable === false) {
            showMessage('The email is already in use. Please choose another email.', true);
            return;
        }


        let otpRes = await fetch('/account/send-otp', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email: email })
        });
        let otpData = await otpRes.json();
        
        if (otpData.success) {
            let msg = 'The OTP code has been sent to your email. Please check and enter the code.';
            // Chỉ hiện mock_code trong dev, KHÔNG BAO GIỜ TRONG PROD!
            if (otpData.mock_code) {
                msg = `The OTP code has been sent to your email (${otpData.mock_code}). Please check and enter the code.`;
            }
            showMessage(msg, false);

            btnSubmit.innerHTML = '<i class="bi bi-check2-square"></i> Verify OTP';
            otpContainer.style.display = 'block';
            
            txtEmail.readOnly = true;
            txtPassword.readOnly = true;
            txtConfirm.readOnly = true;

            frmRegister.removeEventListener('submit', handleSignup);
            frmRegister.addEventListener('submit', handleVerifyAndSubmit);
        } else {
            showMessage(otpData.message || 'Error sending OTP. Please try again with a valid email address.', true);
        }
    }

    async function handleVerifyAndSubmit(e) {
        e.preventDefault();
        
        const email = txtEmail.value;
        const otp = txtOTP.value;

        if (otp.length === 0) {
            showMessage('Please enter the OTP code.', true);
            return;
        }
        
        let res = await fetch('/account/verify-otp', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email: email, otp: otp })
        });
        let data = await res.json();
        
        if (data.success) {
            showMessage('OTP verification successful! Proceeding with registration...', false);
            
            // OTP đã verified trong session. Tiến hành SUBMIT form thật sự.
            // Phải mở khóa các trường để dữ liệu được gửi đi trong POST request
            txtEmail.readOnly = false;
            txtPassword.readOnly = false;
            txtConfirm.readOnly = false;

            frmRegister.removeEventListener('submit', handleVerifyAndSubmit);
            frmRegister.submit(); 
        } else {
            showMessage(data.message, true);
        }
    }
    
    frmRegister.addEventListener('submit', handleSignup);
</script>
{{/fill_Content}}

<div class="signup-scope">
    <div class="container my-5 mb-10"> 
    <div class="row justify-content-center"> 
        <div class="col-12 col-md-8 col-lg-6">
            <div class="register_form ">
                <h3 class="card-header">Acount Registration</h3>
                <div class="card-body">
                    <!-- Alert area for server/client messages -->
                    <div id="alertBox" class="mb-3"></div>
                    <form method="post" action="/account/signup" id="frmRegister">
                        <div class="mb-3">
                            <label for="txtName" class="form-label">Name</label>
                            <input type="text" class="form-control" id="txtName" name="name" autofocus>
                        </div>
                        <div class="mb-3">
                            <label for="txtPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="txtPassword" name="password">
                        </div>
                        <div class="mb-3">
                            <label for="txtConfirm" class="form-label">Password Confirm</label>
                            <input type="password" class="form-control" id="txtConfirm" name="confirm_password">
                        </div>
                        <div class="mb-3">
                            <label for="txtEmail" class="form-label">Email address</label>
                            <input type="email" class="form-control" id="txtEmail" aria-describedby="emailHelp"
                                name="email">
                            <div id="emailHelp" class="form-text">We'll never share your email with anyone else.
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="selRole" class="form-label">Role</label>
                            <select class="form-select" id="selRole" name="role">
                                <option value="student" selected>Student</option>
                                <option value="instructor">Instructor</option>
                            </select>
                        </div>
                        <div class="mb-3" id="otpContainer" style="display: none;">
                            <label for="txtOTP" class="form-label">Code OTP</label>
                            <input type="text" class="form-control" id="txtOTP" name="otp" maxlength="6">
                        </div>
                        <button type="submit" class="btn btn-primary" id="btnSubmit"><i
                                class="bi bi-check2-square"></i> Sign up</button>
                        </form>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
